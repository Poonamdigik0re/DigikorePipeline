# Generated by Django 3.2.18 on 2023-06-14 12:40

import base.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AppPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'permissions': (('add_announcement', 'add_announcement'), ('employee_manager', 'employee_manager'), ('employee_manager_manager', 'employee_manager_manager'), ('employee_manager_admin', 'employee_manager_admin'), ('attendance', 'attendance'), ('attendance_readonly', 'attendance_readonly'), ('attendance_admin', 'attendance_admin'), ('attendance_prod_view', 'attendance_prod_view'), ('leave_manager', 'leave_manager'), ('leave_manager_lead', 'leave_manager_lead'), ('leave_manager_manager', 'leave_manager_manager'), ('leave_manager_admin', 'leave_manager_admin'), ('team_manager', 'team_manager'), ('team_manager_admin', 'team_manager_admin'), ('team_manager_manager', 'team_manager_manager'), ('clients_list', 'clients_list'), ('vendors_list', 'vendors_list'), ('projects_list', 'projects_list'), ('projects_list_add_project', 'projects_list_add_project'), ('projects_overview', 'projects_overview'), ('projects_permission', 'projects_permission'), ('projects', 'projects'), ('task_overview', 'task_overview'), ('task_overview_add_subtask', 'task_overview_add_subtask'), ('resource_planner', 'resource_planner'), ('resource_planner_update', 'resource_planner_update'), ('ingest_system', 'ingest_system'), ('bidding_system', 'bidding_system'), ('bidding_system_bid_rate', 'bidding_system_bid_rate'), ('site_sync', 'site_sync'), ('tasks_list', 'tasks_list'), ('artist_utilization', 'artist_utilization'), ('workstations', 'workstations'), ('file_transfer', 'file_transfer'), ('project_archival', 'project_archival'), ('transportation_page', 'transportation_page'), ('vehicle_directory', 'vehicle_directory'), ('gmail_group', 'gmail_group'), ('create_gmail_group', 'create_gmail_group'), ('tickets', 'tickets'), ('tickets_maintainer', 'tickets_maintainer'), ('tickets_admin', 'tickets_admin')),
                'default_permissions': [],
            },
        ),
        migrations.CreateModel(
            name='BaseRate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task_type', models.CharField(max_length=20, unique=True)),
                ('rate', models.IntegerField()),
            ],
            options={
                'default_permissions': [],
            },
        ),
        migrations.CreateModel(
            name='BaseROP',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task_type', models.CharField(max_length=20, unique=True)),
                ('rate', models.FloatField()),
            ],
            options={
                'default_permissions': [],
            },
        ),
        migrations.CreateModel(
            name='Bid',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project', models.CharField(max_length=20)),
                ('name', models.CharField(max_length=40)),
                ('stereo_budget', models.SmallIntegerField(default=80)),
                ('stereo_minutes', models.FloatField(default=0)),
                ('resolution', models.FloatField(default=1)),
                ('fps', models.SmallIntegerField(default=24)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('purchase_order', models.CharField(blank=True, max_length=40, null=True)),
                ('invoice_number', models.CharField(blank=True, max_length=40, null=True)),
                ('rejected_for', models.TextField(blank=True, help_text='Reason if bid is rejected', null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
            ],
            options={
                'default_permissions': [],
            },
        ),
        migrations.CreateModel(
            name='BidStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40, unique=True)),
                ('default', models.BooleanField(default=False)),
                ('locked', models.BooleanField(default=False)),
                ('bg_color', models.CharField(default='#ffffff', max_length=7)),
                ('fg_color', models.CharField(default='#000000', max_length=7)),
            ],
            options={
                'default_permissions': [],
            },
        ),
        migrations.CreateModel(
            name='ChangeOrder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True, null=True)),
                ('methodology', models.TextField(blank=True, null=True)),
                ('assumption', models.TextField(blank=True, null=True)),
                ('client_bid_note', models.TextField(blank=True, null=True)),
                ('digikore_bid_note', models.TextField(blank=True, null=True)),
                ('bid_status', models.CharField(choices=[('growth', 'growth'), ('bidding', 'bidding'), ('awarded', 'awarded')], default='growth', max_length=10)),
                ('bid_id', models.CharField(blank=True, max_length=40, null=True)),
                ('turnover', models.SmallIntegerField(default=1)),
                ('change_order', models.SmallIntegerField(default=0)),
                ('turnover_date', models.DateField(blank=True, null=True)),
                ('bid_cost', models.FloatField(default=0)),
                ('markup_perc', models.FloatField(default=0)),
                ('markup_value', models.FloatField(default=0)),
                ('cost_to_date_perc', models.FloatField(default=0)),
                ('cost_to_date_value', models.FloatField(default=0)),
                ('client_first_frame', models.IntegerField(default=0)),
                ('client_last_frame', models.IntegerField(default=0)),
                ('working_first_frame', models.IntegerField(default=0)),
                ('working_last_frame', models.IntegerField(default=0)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='change_order_created_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'default_permissions': [],
            },
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40, unique=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'default_permissions': [],
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40)),
                ('email', models.EmailField(max_length=40, unique=True)),
                ('title', models.CharField(blank=True, max_length=40, null=True)),
                ('phone', models.CharField(blank=True, max_length=40, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='contact_created_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'default_permissions': [],
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40, unique=True)),
                ('order', models.SmallIntegerField(default=1)),
                ('resource_planner', models.BooleanField(default=False)),
            ],
            options={
                'default_permissions': [],
            },
        ),
        migrations.CreateModel(
            name='Designation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40, unique=True)),
                ('is_artist', models.BooleanField(default=False, help_text='Add this in resource allocation')),
            ],
            options={
                'default_permissions': [],
            },
        ),
        migrations.CreateModel(
            name='EmailGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40, unique=True)),
                ('mail_to', models.TextField(help_text='separate by ;')),
                ('cc_to', models.TextField(blank=True, help_text='separate_by ;', null=True)),
            ],
            options={
                'default_permissions': [],
            },
        ),
        migrations.CreateModel(
            name='FilerecordStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40, unique=True)),
                ('default', models.BooleanField(default=False)),
                ('bg_color', models.CharField(default='#ffffff', max_length=7)),
                ('fg_color', models.CharField(default='#000000', max_length=7)),
            ],
            options={
                'default_permissions': [],
            },
        ),
        migrations.CreateModel(
            name='FilerecordType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40, unique=True)),
            ],
            options={
                'default_permissions': [],
            },
        ),
        migrations.CreateModel(
            name='LdapGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40, unique=True)),
                ('gid', models.IntegerField(default=1)),
            ],
            options={
                'default_permissions': [],
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=3, unique=True)),
                ('description', models.CharField(blank=True, max_length=40, null=True)),
                ('gid', models.IntegerField(default=100000, unique=True)),
            ],
            options={
                'default_permissions': [],
            },
        ),
        migrations.CreateModel(
            name='NoteType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40, unique=True)),
                ('default', models.BooleanField(default=False)),
                ('order', models.IntegerField(default=1, help_text='Sort Order')),
                ('bg_color', models.CharField(default='#ffffff', max_length=7)),
                ('fg_color', models.CharField(default='#000000', max_length=7)),
            ],
            options={
                'verbose_name_plural': 'Note Types',
                'default_permissions': [],
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField()),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('valid_till', models.DateTimeField()),
            ],
            options={
                'default_permissions': [],
            },
        ),
        migrations.CreateModel(
            name='PostOption',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField()),
                ('link', models.URLField(blank=True, null=True)),
            ],
            options={
                'default_permissions': [],
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('fps', models.FloatField(default=24)),
                ('gid', models.IntegerField(default=0)),
                ('change_order', models.SmallIntegerField(default=0)),
                ('markup_perc', models.FloatField(default=0)),
                ('markup_value', models.FloatField(default=0)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('client_emails', models.TextField(null=True)),
                ('internal_emails', models.TextField(null=True)),
                ('vault_url', models.URLField(null=True)),
                ('thumbnail', models.TextField(default='/static/img/default_poster.png')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('archive_size', models.CharField(default=0, max_length=20)),
                ('archive_percent', models.SmallIntegerField(default=0)),
                ('archive_ready_on', models.DateTimeField(blank=True, null=True)),
                ('archive_started_on', models.DateTimeField(blank=True, null=True)),
                ('archive_completed_on', models.DateTimeField(blank=True, null=True)),
                ('msi_sync', models.BooleanField(default=True)),
                ('archive_ready_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='project_archive_ready_by', to=settings.AUTH_USER_MODEL)),
                ('archive_started_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='project_archive_started_by', to=settings.AUTH_USER_MODEL)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='project_client', to='base.client')),
                ('contacts', models.ManyToManyField(related_name='project_contacts', to='base.Contact')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='project_created_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'default_permissions': [],
            },
        ),
        migrations.CreateModel(
            name='ProjectStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40, unique=True)),
                ('default', models.BooleanField(default=False)),
                ('order', models.SmallIntegerField(default=1)),
                ('locked', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name_plural': 'Project Statuses',
                'default_permissions': [],
            },
        ),
        migrations.CreateModel(
            name='ProjectType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40, unique=True)),
                ('default', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name_plural': 'Project Types',
                'default_permissions': [],
            },
        ),
        migrations.CreateModel(
            name='Shift',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40)),
                ('intime', models.TimeField()),
                ('outtime', models.TimeField()),
                ('color', models.CharField(default='#1ec5b6', max_length=7)),
            ],
            options={
                'default_permissions': [],
            },
        ),
        migrations.CreateModel(
            name='ShotStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40, unique=True)),
                ('default', models.BooleanField(default=False)),
                ('bg_color', models.CharField(default='#ffffff', max_length=7)),
                ('fg_color', models.CharField(default='#000000', max_length=7)),
            ],
            options={
                'verbose_name_plural': 'Shot Statuses',
                'default_permissions': [],
            },
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40, unique=True)),
            ],
            options={
                'default_permissions': [],
            },
        ),
        migrations.CreateModel(
            name='SubtaskStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40, unique=True)),
                ('default', models.BooleanField(default=False)),
                ('bg_color', models.CharField(default='#ffffff', max_length=7)),
                ('fg_color', models.CharField(default='#000000', max_length=7)),
            ],
            options={
                'verbose_name_plural': 'Subtask Statuses',
                'default_permissions': [],
            },
        ),
        migrations.CreateModel(
            name='TaskComplexity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40, unique=True)),
                ('default', models.BooleanField(default=False)),
                ('bg_color', models.CharField(default='#ffffff', max_length=7)),
                ('fg_color', models.CharField(default='#000000', max_length=7)),
            ],
            options={
                'verbose_name_plural': 'Task Complexities',
                'default_permissions': [],
            },
        ),
        migrations.CreateModel(
            name='TaskPriority',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40, unique=True)),
                ('default', models.BooleanField(default=False)),
                ('bg_color', models.CharField(default='#ffffff', max_length=7)),
                ('fg_color', models.CharField(default='#000000', max_length=7)),
            ],
            options={
                'verbose_name_plural': 'Task Priorities',
                'default_permissions': [],
            },
        ),
        migrations.CreateModel(
            name='TaskStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40, unique=True)),
                ('default', models.BooleanField(default=False)),
                ('bg_color', models.CharField(default='#ffffff', max_length=7)),
                ('fg_color', models.CharField(default='#000000', max_length=7)),
            ],
            options={
                'verbose_name_plural': 'Task Statuses',
                'default_permissions': [],
            },
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='team_department', to='base.department')),
                ('lead', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='team_lead', to=settings.AUTH_USER_MODEL)),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='team_location', to='base.location')),
                ('shift', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='team_shift', to='base.shift')),
            ],
            options={
                'default_permissions': [],
            },
        ),
        migrations.CreateModel(
            name='TicketPriority',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40, unique=True)),
                ('default', models.BooleanField(default=False)),
                ('order', models.SmallIntegerField(default=1)),
            ],
            options={
                'verbose_name_plural': 'Ticket Priorities',
                'default_permissions': [],
            },
        ),
        migrations.CreateModel(
            name='TicketStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40, unique=True)),
                ('default', models.BooleanField(default=False)),
                ('order', models.SmallIntegerField(default=1)),
                ('locked', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name_plural': 'Ticket Statuses',
                'default_permissions': [],
            },
        ),
        migrations.CreateModel(
            name='TicketType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40, unique=True)),
                ('default', models.BooleanField(default=False)),
                ('order', models.SmallIntegerField(default=1)),
            ],
            options={
                'verbose_name_plural': 'Ticket Types',
                'default_permissions': [],
            },
        ),
        migrations.CreateModel(
            name='Workstation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cpu', models.CharField(blank=True, max_length=100, null=True)),
                ('ram', models.CharField(blank=True, max_length=100, null=True)),
                ('ip', models.CharField(blank=True, max_length=20, null=True)),
                ('mac', models.CharField(blank=True, max_length=20, null=True)),
                ('hdd', models.TextField(blank=True, null=True)),
                ('hostname', models.CharField(blank=True, max_length=100, null=True)),
                ('gpu', models.CharField(blank=True, max_length=100, null=True)),
                ('os', models.CharField(blank=True, max_length=100, null=True)),
                ('status', models.CharField(blank=True, max_length=200, null=True)),
                ('user', models.CharField(blank=True, max_length=200, null=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('sys_vendor', models.CharField(blank=True, max_length=200, null=True)),
                ('product_name', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'default_permissions': [],
            },
        ),
        migrations.CreateModel(
            name='Vote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('option', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='vote_post_option', to='base.postoption')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='vote_post', to='base.post')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='vote_users', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'default_permissions': [],
            },
        ),
        migrations.CreateModel(
            name='Vendor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40, unique=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('contacts', models.ManyToManyField(related_name='vendor_contacts', to='base.Contact')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='vendor_created_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'default_permissions': [],
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.IntegerField(default=0)),
                ('full_name', models.CharField(max_length=40, unique=True)),
                ('empid', models.CharField(max_length=40, unique=True)),
                ('date_of_joining', models.DateField()),
                ('gender', models.CharField(default='male', max_length=10)),
                ('blood_group', models.CharField(blank=True, max_length=6, null=True)),
                ('date_of_birth', models.DateField()),
                ('category', models.CharField(blank=True, max_length=40, null=True)),
                ('aadhar_number', models.CharField(blank=True, max_length=12, null=True)),
                ('phone', models.TextField(blank=True, null=True)),
                ('current_address', models.TextField(blank=True, null=True)),
                ('permanent_address', models.TextField(blank=True, null=True)),
                ('emergency_contact', models.TextField(blank=True, null=True)),
                ('emergency_phone', models.CharField(blank=True, max_length=40, null=True)),
                ('confirmation_status', models.CharField(choices=[('pending', 'Pending'), ('confirmed', 'Confirmed'), ('terminated', 'Terminated'), ('notice_period', 'Service Notice Period'), ('resigned', 'Resigned'), ('absconding', 'Absconding')], default='pending', max_length=20)),
                ('confirmation_date', models.DateField(blank=True, null=True)),
                ('confirmation_letter_issued', models.BooleanField(default=False)),
                ('expected_rop', models.SmallIntegerField(default=0)),
                ('bgv_report', models.CharField(blank=True, max_length=40, null=True)),
                ('bgv_result', models.CharField(blank=True, max_length=40, null=True)),
                ('pip_start_date', models.DateField(blank=True, null=True)),
                ('pip_end_date', models.DateField(blank=True, null=True)),
                ('date_of_leaving', models.DateField(blank=True, null=True)),
                ('reason_of_leaving', models.TextField(blank=True, null=True)),
                ('paid_leave', models.FloatField(default=0)),
                ('casual_leave', models.FloatField(default=0)),
                ('comp_off', models.FloatField(default=0)),
                ('transport_required', models.CharField(default='no', max_length=3)),
                ('vehicle_type', models.CharField(blank=True, max_length=10, null=True)),
                ('vehicle_number', models.CharField(blank=True, max_length=20, null=True)),
                ('profile_picture', models.TextField(default='/static/img/default_profile.png')),
                ('employment_type', models.CharField(blank=True, max_length=50, null=True)),
                ('password_reset', models.BooleanField(default=False)),
                ('password_reset_on', models.DateField(blank=True, null=True)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='userprofile_department', to='base.department')),
                ('designation', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='userprofile_designation', to='base.designation')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='userprofile_location', to='base.location')),
                ('skills', models.ManyToManyField(related_name='userprofile_skills', to='base.Skill')),
                ('team', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='userprofile_team', to='base.team')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'default_permissions': [],
            },
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('assigned_on', models.DateTimeField(blank=True, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('resolved_on', models.DateTimeField(blank=True, null=True)),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='ticket_assignee', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='ticket_created_by', to=settings.AUTH_USER_MODEL)),
                ('priority', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='ticket_priority', to='base.ticketpriority')),
                ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ticket_project', to='base.project')),
                ('resolved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ticket_resolved_by', to=settings.AUTH_USER_MODEL)),
                ('status', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='ticket_status', to='base.ticketstatus')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='ticket_type', to='base.tickettype')),
            ],
            options={
                'default_permissions': [],
            },
        ),
        migrations.CreateModel(
            name='TaskType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40, unique=True)),
                ('order', models.SmallIntegerField(default=1, help_text='Sort Order')),
                ('default', models.BooleanField(default=False)),
                ('bg_color', models.CharField(default='#ffffff', max_length=7)),
                ('fg_color', models.CharField(default='#000000', max_length=7)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='tasktype_department', to='base.department')),
            ],
            options={
                'verbose_name_plural': 'Task Types',
                'default_permissions': [],
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parent_type', models.CharField(max_length=20)),
                ('parent_id', models.IntegerField()),
                ('name', models.CharField(default='main', max_length=40)),
                ('description', models.TextField(blank=True, null=True)),
                ('bids', models.FloatField(default=0)),
                ('actuals', models.IntegerField(default=0)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('turnover_date', models.DateField(blank=True, null=True)),
                ('working_first_frame', models.IntegerField(default=0)),
                ('working_last_frame', models.IntegerField(default=0)),
                ('approved_version', models.IntegerField(default=0)),
                ('msi_record_code', models.CharField(blank=True, max_length=40, null=True)),
                ('delivered_version', models.IntegerField(default=0)),
                ('task_name', models.TextField(blank=True, null=True)),
                ('due_date', models.DateField(blank=True, null=True)),
                ('start_frame', models.IntegerField(default=0)),
                ('turnover_no', models.IntegerField(default=0)),
                ('end_frame', models.IntegerField(default=0)),
                ('assign_bid', models.IntegerField(default=0)),
                ('scope_of_work', models.TextField(blank=True, null=True)),
                ('thumbnail', models.TextField(default='/static/img/default_poster.png')),
                ('assignee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='task_assignee', to=settings.AUTH_USER_MODEL)),
                ('complexity', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='task_complexity', to='base.taskcomplexity')),
                ('priority', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='task_priority', to='base.taskpriority')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='task_project', to='base.project')),
                ('status', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='task_status', to='base.taskstatus')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='task_type', to='base.tasktype')),
                ('vendor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='task_vendor', to='base.vendor')),
            ],
            options={
                'default_permissions': [],
            },
        ),
        migrations.CreateModel(
            name='Subtask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parent_type', models.CharField(max_length=20)),
                ('parent_id', models.IntegerField()),
                ('name', models.CharField(max_length=40)),
                ('description', models.TextField(blank=True, null=True)),
                ('bids', models.FloatField(default=0)),
                ('actuals', models.IntegerField(default=0)),
                ('work_perc', models.SmallIntegerField(default=0)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('assignee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='subtask_assignee', to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='subtask_project', to='base.project')),
                ('status', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='subtask_status', to='base.subtaskstatus')),
            ],
            options={
                'default_permissions': [],
            },
        ),
        migrations.CreateModel(
            name='Shot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sequence', models.CharField(blank=True, max_length=40, null=True)),
                ('scene', models.CharField(blank=True, max_length=40, null=True)),
                ('reel', models.CharField(blank=True, max_length=40, null=True)),
                ('episode', models.CharField(blank=True, max_length=40, null=True)),
                ('name', models.CharField(default='Shot', max_length=40)),
                ('parent_type', models.CharField(max_length=20)),
                ('parent_id', models.IntegerField()),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('client_first_frame', models.IntegerField(default=0)),
                ('client_last_frame', models.IntegerField(default=0)),
                ('working_first_frame', models.IntegerField(default=0)),
                ('working_last_frame', models.IntegerField(default=0)),
                ('msi_record_code', models.CharField(blank=True, max_length=40, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='shot_change_order_created_by', to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='shot_project', to='base.project')),
                ('status', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='shot_status', to='base.shotstatus')),
            ],
            options={
                'default_permissions': [],
            },
        ),
        migrations.CreateModel(
            name='ResourceShare',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('count', models.FloatField(default=0)),
                ('from_department', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='resource_share_from_department', to='base.department')),
                ('to_department', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='resource_share_to_department', to='base.department')),
            ],
            options={
                'default_permissions': [],
            },
        ),
        migrations.CreateModel(
            name='ResourceCache',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('headcount', models.SmallIntegerField(default=0)),
                ('absent', models.SmallIntegerField(default=0)),
                ('leave', models.SmallIntegerField(default=0)),
                ('working_hours', models.SmallIntegerField(default=8)),
                ('mandays', models.SmallIntegerField(default=0)),
                ('allocated', models.SmallIntegerField(default=0)),
                ('borrowed_resources', models.SmallIntegerField(default=0)),
                ('lend_resources', models.SmallIntegerField(default=0)),
                ('weekdays', models.SmallIntegerField(default=0)),
                ('weekly', models.BooleanField(default=False)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='resource_cache_department', to='base.department')),
            ],
            options={
                'default_permissions': [],
            },
        ),
        migrations.CreateModel(
            name='ReportingRule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('junior', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='reporting_rule_junior', to='base.designation')),
                ('senior', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='reporting_rule_senior', to='base.designation')),
            ],
            options={
                'default_permissions': [],
            },
        ),
        migrations.CreateModel(
            name='ProjectResource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('projected', models.FloatField(default=0)),
                ('actual', models.FloatField(default=0)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='projectresource_department', to='base.department')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='projectresource_location', to='base.location')),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='project_resource_modified_by', to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='projectresource_project', to='base.project')),
            ],
            options={
                'default_permissions': [],
            },
        ),
        migrations.AddField(
            model_name='project',
            name='default_tasks',
            field=models.ManyToManyField(to='base.TaskType'),
        ),
        migrations.AddField(
            model_name='project',
            name='producers',
            field=models.ManyToManyField(related_name='project_producers', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='project',
            name='production',
            field=models.ManyToManyField(related_name='project_production', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='project',
            name='status',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='project_status', to='base.projectstatus'),
        ),
        migrations.AddField(
            model_name='project',
            name='supervisors',
            field=models.ManyToManyField(related_name='project_supervisors', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='project',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='project_type', to='base.projecttype'),
        ),
        migrations.AddField(
            model_name='project',
            name='users',
            field=models.ManyToManyField(related_name='project_users', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='project',
            name='vendors',
            field=models.ManyToManyField(related_name='project_vendors', to='base.Vendor'),
        ),
        migrations.AddField(
            model_name='post',
            name='options',
            field=models.ManyToManyField(to='base.PostOption'),
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('read', models.BooleanField(default=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='notification_created_by', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='notification_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'default_permissions': [],
            },
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parent_type', models.CharField(max_length=20)),
                ('parent_id', models.IntegerField()),
                ('text', models.TextField()),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('msi_record_code', models.CharField(blank=True, max_length=40, null=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='note_created_by', to=settings.AUTH_USER_MODEL)),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='note_type', to='base.notetype')),
            ],
            options={
                'default_permissions': [],
            },
        ),
        migrations.CreateModel(
            name='LeaveLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('leave_type', models.CharField(choices=[('sick_leave', 'Sick Leave'), ('paid_leave', 'Paid Leave'), ('casual_leave', 'Casual Leave'), ('comp_off', 'Comp Off'), ('unpaid_leave', 'Unpaid Leave')], default='paid_leave', max_length=20)),
                ('total_days', models.FloatField(default=0)),
                ('comment', models.CharField(max_length=200)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='leave_log_created_by', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='leave_log_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'default_permissions': [],
            },
        ),
        migrations.CreateModel(
            name='Leave',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('leave_type', models.CharField(choices=[('sick_leave', 'Sick Leave'), ('paid_leave', 'Paid Leave'), ('casual_leave', 'Casual Leave'), ('comp_off', 'Comp Off'), ('unpaid_leave', 'Unpaid Leave')], default='paid_leave', max_length=20)),
                ('from_date', models.DateField()),
                ('to_date', models.DateField()),
                ('total_days', models.FloatField(default=0)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('canceled', 'Canceled'), ('rejected', 'Rejected')], default='pending', max_length=20)),
                ('reason', models.CharField(max_length=200)),
                ('rejection', models.CharField(blank=True, max_length=200, null=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='leave_created_by', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='leave_updated_by', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='leave_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'default_permissions': [],
            },
        ),
        migrations.CreateModel(
            name='GmailGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('api_id', models.CharField(blank=True, max_length=20, null=True)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('email', models.EmailField(max_length=100, unique=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('members', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'default_permissions': [],
            },
        ),
        migrations.CreateModel(
            name='FileTransfer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_path', models.TextField(blank=True, null=True)),
                ('to_path', models.TextField(blank=True, null=True)),
                ('size', models.CharField(default=0, max_length=20)),
                ('files', models.SmallIntegerField(default=0)),
                ('status', models.CharField(blank=True, max_length=20, null=True)),
                ('percent', models.SmallIntegerField(default=0)),
                ('cancel', models.BooleanField(default=False)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('canceled_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='filetransfer_canceled_by', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='filetransfer_created_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'default_permissions': [],
            },
        ),
        migrations.CreateModel(
            name='Filerecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parent_type', models.CharField(max_length=20)),
                ('parent_id', models.IntegerField()),
                ('client_name', models.CharField(max_length=200)),
                ('client_version', models.SmallIntegerField(default=0)),
                ('name', models.CharField(max_length=200)),
                ('version', models.SmallIntegerField(default=1)),
                ('path', models.TextField()),
                ('first_frame', models.IntegerField(default=0)),
                ('last_frame', models.IntegerField(default=0)),
                ('extension', models.CharField(blank=True, max_length=10, null=True)),
                ('padding', models.SmallIntegerField(default=0)),
                ('connector', models.CharField(default='.', max_length=1)),
                ('is_sequence', models.BooleanField(default=False)),
                ('resolution', models.CharField(blank=True, max_length=100, null=True)),
                ('camera', models.CharField(blank=True, max_length=100, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='filerecord_created_by', to=settings.AUTH_USER_MODEL)),
                ('locations', models.ManyToManyField(related_name='filerecord_locations', to='base.Location')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='filerecord_project', to='base.project')),
                ('status', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='filerecord_status', to='base.filerecordstatus')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='filerecord_type', to='base.filerecordtype')),
            ],
            options={
                'default_permissions': [],
            },
        ),
        migrations.AddField(
            model_name='designation',
            name='ldap_group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='designation_ldap_group', to='base.ldapgroup'),
        ),
        migrations.AddField(
            model_name='designation',
            name='site_group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='designation_site_group', to='auth.group'),
        ),
        migrations.CreateModel(
            name='Dependency',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parent_type', models.CharField(max_length=20)),
                ('parent_id', models.IntegerField()),
                ('child_type', models.CharField(max_length=20)),
                ('child_id', models.IntegerField()),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='dependency_created_by', to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='dependency_project', to='base.project')),
            ],
            options={
                'default_permissions': [],
            },
        ),
        migrations.CreateModel(
            name='Compoff',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('total_days', models.FloatField(default=0)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('canceled', 'Canceled'), ('rejected', 'Rejected')], default='pending', max_length=20)),
                ('reason', models.CharField(max_length=200)),
                ('rejection', models.CharField(blank=True, max_length=200, null=True)),
                ('can_be_incentive', models.BooleanField(default=False)),
                ('is_incentive', models.BooleanField(default=False)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='compoff_updated_by', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='compoff_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'default_permissions': [],
            },
        ),
        migrations.CreateModel(
            name='CompanyHoliday',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('name', models.CharField(max_length=40)),
                ('working', models.BooleanField(default=False)),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='holiday_location', to='base.location')),
            ],
            options={
                'default_permissions': [],
            },
        ),
        migrations.AddField(
            model_name='client',
            name='contacts',
            field=models.ManyToManyField(related_name='client_contacts', to='base.Contact'),
        ),
        migrations.AddField(
            model_name='client',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='client_created_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='ChangeOrderBid',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bid', models.FloatField(default=0)),
                ('rate', models.FloatField(default=0)),
                ('change_order', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='change_order_bid_co', to='base.changeorder')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='change_order_bid_project', to='base.project')),
                ('shot', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='change_order_bid_shot', to='base.shot')),
                ('task_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='change_order_bid_task_type', to='base.tasktype')),
            ],
            options={
                'default_permissions': [],
            },
        ),
        migrations.AddField(
            model_name='changeorder',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='change_order_project', to='base.project'),
        ),
        migrations.AddField(
            model_name='changeorder',
            name='shot',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='change_order_shot', to='base.shot'),
        ),
        migrations.CreateModel(
            name='ChangeLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parent_type', models.CharField(max_length=20)),
                ('parent_id', models.IntegerField()),
                ('key', models.CharField(max_length=40)),
                ('value', models.CharField(max_length=40)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='change_log_created_by', to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='changelog_project', to='base.project')),
            ],
            options={
                'default_permissions': [],
            },
        ),
        migrations.CreateModel(
            name='BidShot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sequence', models.CharField(blank=True, max_length=40, null=True)),
                ('shot', models.CharField(blank=True, max_length=40, null=True)),
                ('task', models.CharField(blank=True, max_length=40, null=True)),
                ('bids', models.FloatField(default=0)),
                ('awarded', models.BooleanField(default=False)),
                ('internal_eta', models.DateField(null=True)),
                ('client_eta', models.DateField(null=True)),
                ('first_frame', models.SmallIntegerField(null=True)),
                ('last_frame', models.SmallIntegerField(null=True)),
                ('plate_version', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('sup_note', models.TextField(blank=True, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('bid', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='bidshot_bid', to='base.bid')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='bidshot_created_by', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='bidshot_modified_by', to=settings.AUTH_USER_MODEL)),
                ('task_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='bidshot_task_type', to='base.tasktype')),
            ],
            options={
                'default_permissions': [],
            },
        ),
        migrations.CreateModel(
            name='BidRate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('base_rate', models.IntegerField(default=0)),
                ('rate', models.IntegerField(default=0)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('bid', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='bidrate_bid', to='base.bid')),
                ('modified_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='bidrate_created_by', to=settings.AUTH_USER_MODEL)),
                ('task_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='bidrate_task_type', to='base.tasktype')),
            ],
            options={
                'default_permissions': [],
            },
        ),
        migrations.CreateModel(
            name='BidActual',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('actuals', models.IntegerField(default=0)),
                ('modified_on', models.DateTimeField(auto_now=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='bidactual_project', to='base.project')),
                ('shot', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='bidactual_shot', to='base.shot')),
                ('subtask', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='bidactual_subtask', to='base.subtask')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='bidactual_task', to='base.task')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='bidactual_artist', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'default_permissions': [],
            },
        ),
        migrations.AddField(
            model_name='bid',
            name='client',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='bid_client', to='base.client'),
        ),
        migrations.AddField(
            model_name='bid',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='bid_created_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='bid',
            name='default_tasks',
            field=models.ManyToManyField(related_name='bid_default_tasks', to='base.TaskType'),
        ),
        migrations.AddField(
            model_name='bid',
            name='modified_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='bid_modified_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='bid',
            name='project_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='bid_project_type', to='base.projecttype'),
        ),
        migrations.AddField(
            model_name='bid',
            name='status',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='bid_status', to='base.bidstatus'),
        ),
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('PR', 'Present'), ('LOP', 'Loss of Pay'), ('IA', 'Informed Absent'), ('LE', 'Leave'), ('HD', 'Half Day'), ('HL', 'Half Day Leave')], default='IN', max_length=20)),
                ('date', models.DateField()),
                ('intime', models.DateTimeField(null=True)),
                ('outtime', models.DateTimeField(null=True)),
                ('working_hours', models.IntegerField(null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='attendance_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'default_permissions': [],
            },
        ),
        migrations.CreateModel(
            name='Attachment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parent_type', models.CharField(max_length=20)),
                ('parent_id', models.IntegerField()),
                ('name', models.CharField(max_length=40)),
                ('size', models.IntegerField()),
                ('type', models.CharField(max_length=40, null=True)),
                ('file', models.FileField(upload_to=base.models.upload_attachment)),
                ('restricted', models.BooleanField(default=False)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='attachment_created_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'default_permissions': [],
            },
        ),
        migrations.CreateModel(
            name='Announcement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('valid_till', models.DateField()),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='announcement_created_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'default_permissions': [],
            },
        ),
    ]
